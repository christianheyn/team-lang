global alias tdd "./modules/tdd/"
global alias utils "./helper/"

import (fa fb fc) from "./FeatureA.team"
import as _B from "./FeatureB.team"

feature {run () (print "RUN")}

instance Functor T {
    {fmap (f t) (f t)}
}

{askForTask () (do 
    (print "What Task?")
    (let input = (readLine)
        (print input))
)}

project {team-lang @Strings -> Void (@args) (
    let var argLen = (length args)
        var arg1   = (head args)

        if (?and (not ?equals argLen 0) (?equals arg1 "execute") )
            then (run)
            else (askForTask)
)}

either Number String Boolean


class LIST = Functor Show Eq

class Functor <T> = {fmap <U> {T -> U} -> T -> U}

{add2 (x) (+ 2 ?)}

var html = xml 
	<div key="value" key2={(getValue)}>
		{(getItem)}
	</div>

var htmlString = (show html)